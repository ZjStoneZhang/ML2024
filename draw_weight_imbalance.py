import matplotlib.pyplot as plt
from matplotlib import rcParams
import numpy as np

old_norm = [
    [2.2855, 2.2138, 2.3296, 2.1981, 2.0268, 2.2162, 2.4129, 2.4946, 2.3031,
        2.1583, 2.3314, 2.3009, 2.4077, 2.2488, 2.3860, 2.2827, 2.4116, 2.3934,
        2.3865, 2.3693],
    [1.8066, 1.9042, 2.0792, 1.8403, 1.9714, 2.0992, 2.0411, 2.1910, 2.0220,
        1.9673, 2.0356, 1.9784, 2.1495, 2.0392, 2.2685, 1.9431, 2.0736, 2.1438,
        2.0725, 2.1348, 1.9247, 2.0430, 2.1662, 1.9706, 1.9486, 2.0402, 1.8662,
        2.1531, 2.0725, 1.8310, 2.0030, 1.9736, 2.0329, 1.7493, 2.0650, 2.1576,
        1.9709, 1.9968, 2.0419, 2.0076],
    [1.6988, 1.7907, 1.9113, 1.7500, 1.6552, 1.9686, 1.8279, 1.8785, 1.8140,
        1.7479, 1.7914, 1.7616, 1.9416, 1.8140, 1.9994, 1.8162, 2.0477, 1.9591,
        1.9810, 2.0242, 1.7312, 1.8776, 1.9087, 1.8325, 1.7318, 1.8621, 1.6736,
        1.8516, 1.9658, 1.8805, 1.7910, 1.8427, 1.8540, 1.6947, 1.8940, 1.8562,
        1.9663, 1.8945, 1.9540, 1.8796, 1.8256, 1.8534, 1.9018, 1.5798, 1.8309,
        1.9649, 1.8201, 1.8889, 1.8470, 1.8062, 1.8967, 2.0855, 1.9294, 1.6535,
        1.7547, 2.0031, 1.8557, 2.0548, 1.8124, 1.7942],
    [1.6245, 1.6427, 1.7725, 1.7770, 1.6976, 1.8447, 1.7167, 1.8877, 1.7662,
        1.7395, 1.7465, 1.7883, 1.7736, 1.8434, 1.8881, 1.6643, 1.8793, 1.8654,
        1.7245, 1.7884, 1.6786, 1.7509, 1.8091, 1.7814, 1.6966, 1.7234, 1.6340,
        1.8178, 1.8221, 1.8191, 1.6694, 1.6646, 1.7822, 1.6699, 1.8351, 1.7372,
        1.8877, 1.7501, 1.8462, 1.7807, 1.6983, 1.7321, 1.8157, 1.4505, 1.7458,
        1.7283, 1.7396, 1.7045, 1.7985, 1.7183, 1.6312, 1.9576, 1.8784, 1.6298,
        1.6464, 1.6541, 1.7984, 1.7294, 1.7430, 1.6638, 1.5987, 1.7927, 1.6636,
        1.8095, 1.7883, 1.7128, 1.5706, 1.7755, 1.7972, 1.7587, 1.6806, 1.8074,
        1.6993, 1.6803, 1.5870, 1.7527, 1.7314, 1.7686, 1.8428, 1.6316]
]

new_norm = [
    [3.2532, 3.0338, 2.9488, 2.9711, 2.9120, 2.9451, 2.8748, 2.8186, 3.0665,
        2.8772, 3.1506, 3.0895, 3.0412, 2.8685, 3.1050, 2.8500, 2.9239, 2.9413,
        3.0050, 3.0242],
    [2.7294, 2.7240, 2.7586, 2.5785, 2.7630, 2.7177, 2.7939, 2.4351, 2.6555,
        2.7326, 2.3686, 3.0298, 2.7337, 2.5252, 2.6007, 2.8198, 2.8738, 2.8438,
        2.9158, 2.7509],
    [2.4875, 2.7280, 2.5917, 2.6433, 2.6267, 2.4895, 2.5646, 2.6658, 2.7033,
        2.4535, 2.6418, 2.4432, 2.3980, 2.5551, 2.5889, 2.4504, 2.2087, 2.5254,
        2.4034, 2.6087],
    [2.1269, 2.3935, 2.2505, 2.2762, 2.4106, 2.6075, 2.5070, 2.1858, 2.5917,
        2.2912, 2.6732, 2.1736, 2.2550, 2.6371, 2.6550, 2.6191, 2.2419, 2.4442,
        2.2538, 2.1439]
]


def draw(i):
    # 全局设置字体为 Times New Roman
    rcParams['font.family'] = 'Times New Roman'

    # 绘图
    fig, ax = plt.subplots(figsize=(3, 2))

    # 散点图
    ax.scatter(range(len(old_norm[i])), old_norm[i], marker='^', color='blue', label='old classes', s=10)
    ax.scatter(range(len(old_norm[i]) + 1, len(new_norm[i]) + len(old_norm[i]) + 1), new_norm[i], marker='o',
               color='red', label='new classes', s=10)

    # 设置横坐标和纵坐标名称
    ax.set_xlabel('Class Index', fontsize=12, fontweight='bold')
    ax.set_ylabel('Norms', fontsize=12, fontweight='bold')

    # 设置横坐标的刻度和网格
    ax.set_xticks(np.arange(0, 101, 20))
    ax.set_xticklabels(np.arange(0, 101, 20), fontsize=12, fontweight='bold')
    ax.xaxis.grid(True, which='major', linestyle='--', color='grey', linewidth=1.0)

    # 设置纵坐标的刻度和网格
    ax.set_yticks(np.arange(0, 4, 1))
    ax.set_yticklabels(np.arange(0, 4, 1), fontsize=12, fontweight='bold')

    # 设置刻度线的粗细
    ax.tick_params(axis='x', which='major', width=1.5)
    ax.tick_params(axis='y', width=1.5)

    # 设置坐标的范围
    ax.set_xlim(0, 100)
    ax.set_ylim(0, 3.5)

    # 设置坐标轴线的粗细
    ax.spines['top'].set_linewidth(1.5)  # 上边框
    ax.spines['right'].set_linewidth(1.5)  # 右边框
    ax.spines['bottom'].set_linewidth(1.5)  # 下边框
    ax.spines['left'].set_linewidth(1.5)  # 左边框

    # 调整布局以避免标签被截断
    plt.tight_layout(pad=1.0)

    # 添加图例
    if i == 0:
        ax.legend(prop={'weight': 'bold', 'size': 10})

    # 显示图形
    plt.show()


if __name__ == '__main__':
    # for i in range(4):
    #     draw(i)

    count = 0.
    sum = 0.
    for i in range(len(new_norm)):
        for j in range(len(new_norm[i])):
            sum += new_norm[i][j]
            count += 1.
    print(sum/count)
